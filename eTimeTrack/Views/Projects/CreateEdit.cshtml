@using eTimeTrack.Controllers
@model eTimeTrack.Models.Project

@{
    ViewBag.Title = ViewBag.Source + " Project";
}

@Html.Partial("_Banner")

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @if (ViewBag.Source == Source.Existing)
        {
            @Html.HiddenFor(model => model.ProjectID)
        }

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectNo, new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProjectNo, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.ProjectNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Notes, new { @class = "form-control fullWidth", rows = 3 })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.ManagerID, new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.DropDownList("ManagerID", (SelectList)ViewBag.LeadAdminList, "Select", new { id = "employee", @class = "form-control", required = "required" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsClosed, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsClosed)
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsArchived, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsArchived)
                </div>
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.DisplayTaskNotes, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.DisplayTaskNotes)
                </div>
            </div>
        </div>    
        
        <div class="form-group">
            @Html.LabelFor(model => model.CommentsMandatory, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CommentsMandatory)
                </div>
            </div>
        </div>

        <div class="pull-right">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
        <a href="@Url.Action("Index")" class="btn btn-primary">Back</a>

    </div>
}