@using System.Globalization
@model eTimeTrack.ViewModels.TaskTransferSelectViewModel

@{
    ViewBag.Title = "Task Transfer";
}

@Html.Partial("_Banner")
@Html.Partial("_InfoMessageRender")

@using (Html.BeginForm("TaskSelect", "TaskTransfer", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProjectId)

    <div class="form-group">
        <label class="control-label">Please select 'From' and 'To' Task and Variation to get a list of all timesheet items to select for transfer.</label>
    </div>

    string[] fromTo = { "from", "to" };
    <div class="row form-group">
        @foreach (string type in fromTo)
        {
            TextInfo ti = new CultureInfo("en-US", false).TextInfo;
            <div class="col-md-6">

                <h4>Transfer @ti.ToTitleCase(type):</h4>
                <hr />
                <div id="ProjectPartDiv" class="row form-group">
                    <div class="col-md-4">Project Part</div>
                    <div class="col-md-8">
                        @Html.DropDownList("ProjectPartSelector", Model.ProjectParts, "Select", new { id = "ProjectPartSelector", @class = "form-control ProjectPartSelector", data_fromTo = type })
                    </div>
                </div>

                <div id="ProjectGroupDiv" class="row form-group">
                    <div class="col-md-4">Project Group</div>
                    <div class="col-md-8">
                        <select class="form-control ProjectGroupSelector" data-fromTo="@type" disabled></select>
                    </div>
                </div>

                <div id="TaskDiv" class="row form-group">
                    <div class="col-md-4">Task</div>
                    <div class="col-md-8">
                        <select name="Task@(type).TaskID" class="form-control TaskSelector" data-fromTo="@type" disabled></select>
                    </div>
                </div>

                <div id="VariationDiv" class="row form-group">
                    <div class="col-md-4">Variation Items</div>
                    <div class="col-md-8">
                        <select name="Variation@(type).VariationID" class="form-control VariationSelector" data-fromTo="@type" disabled></select>
                    </div>
                </div>
            </div>

        }
    </div>
    <hr />
    <div class="row form-group">
        <div class="col-md-4">
            @Html.LabelFor(model => model.StartDate)
            @Html.DropDownListFor(model => model.StartDate, Model.DateSelect, "Select", new { @class = "form-control" })
        </div>

        <div class="col-md-4">
            @Html.LabelFor(model => model.EndDate)
            @Html.DropDownListFor(model => model.EndDate, Model.DateSelect, "Select", new { @class = "form-control" })
        </div>
    </div>

    <div class="pull-right">
        <input type="submit" id="submit" value="OK" class="btn btn-primary" disabled />
    </div>
    <a href="@Url.Action("Index", "Manage")" class="btn btn-primary">Cancel</a>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $(document).ready(function () {

            // project part change
            $('.ProjectPartSelector').change(function () {
                var fromTo = $(this).data('fromto');
                var groupSelector = $('.ProjectGroupSelector[data-fromTo=' + fromTo + ']').first();
                var taskSelector = $('.TaskSelector[data-fromTo=' + fromTo + ']').first();
                var variationSelector = $('.VariationSelector[data-fromTo=' + fromTo + ']').first();

                groupSelector.empty();
                taskSelector.empty();
                variationSelector.empty();

                groupSelector.prop('disabled', true);
                taskSelector.prop('disabled', true);
                variationSelector.prop('disabled', true);

                if ($(this).val() !== 'Select') {
                    $.post('@Url.Action("GetProjectGroupList", "EmployeeTimesheets")',
                        { projectPartId: $(this).val() }).done(function (data) {
                            groupSelector.append($('<option>').text('Select'));
                            for (var i = 0; i < data.length; i++) {
                                groupSelector.append($('<option>', { value: data[i].GroupID }).text(data[i].Name));
                            }

                            if (data.length === 1) {
                                groupSelector[0].selectedIndex = 1;
                                groupSelector.change();
                            }
                            groupSelector.prop('disabled', false);
                            variationSelector.change();
                        });
                } else {
                    variationSelector.change();
                }
            });

            // project group change
            $('.ProjectGroupSelector').change(function () {
                var fromTo = $(this).data('fromto');
                var taskSelector = $('.TaskSelector[data-fromTo=' + fromTo + ']').first();
                var variationSelector = $('.VariationSelector[data-fromTo=' + fromTo + ']').first();

                taskSelector.empty();
                variationSelector.empty();

                taskSelector.prop('disabled', true);
                variationSelector.prop('disabled', true);

                if ($(this).val() !== 'Select') {
                    $.post('@Url.Action("GetTaskList", "EmployeeTimesheets")',
                        { projectGroupId: $(this).val() }).done(function (data) {
                            taskSelector.append($('<option>').text('Select'));
                            for (var i = 0; i < data.length; i++) {
                                taskSelector.append($('<option>', { value: data[i].TaskID }).text(data[i].Name));
                            }
                            if (data.length === 1) {
                                taskSelector[0].selectedIndex = 1;
                                taskSelector.change();
                            }
                            taskSelector.prop('disabled', false);
                            variationSelector.change();
                        });
                } else {
                    variationSelector.change();
                }

            });

            // task change
            $('.TaskSelector').change(function () {
                var fromTo = $(this).data('fromto');
                var variationSelector = $('.VariationSelector[data-fromTo=' + fromTo + ']').first();
                variationSelector.empty();

                variationSelector.prop('disabled', true);

                if ($(this).val() !== 'Select') {
                    $.post('@Url.Action("GetVariationList", "EmployeeTimesheets")',
                        { projectTaskId: $(this).val() }).done(function (data) {
                            variationSelector.append($('<option>').text('Select'));
                            for (var i = 0; i < data.length; i++) {
                                variationSelector.append($('<option>', { value: data[i].VariationID })
                                    .text(data[i].Description));
                            }
                            if (data.length === 1) {
                                variationSelector[0].selectedIndex = 1;
                            }
                            variationSelector.prop('disabled', false);
                            variationSelector.change();
                        });
                } else {
                    variationSelector.change();
                }

            });

            // variation change
            $('.VariationSelector').change(function () {
                var variationSelectors = $('.VariationSelector');
                var bothSelected = true;
                variationSelectors.each(function () {
                    if ($(this).is(':disabled') || $(this).val() == null || $(this).val() === 'Select') {
                        bothSelected = false;
                    }
                });
                $('#submit').prop('disabled', !bothSelected);
            });
        });

    </script>
}

