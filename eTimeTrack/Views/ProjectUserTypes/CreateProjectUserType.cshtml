@using eTimeTrack.Helpers
@model eTimeTrack.ViewModels.ProjectUserTypeCreateViewModel

@{
    ViewBag.Title = "Create Project User Type";
    ViewBag.BannerColour = AecomColour.Blue;
}

@Html.Partial("_Banner")
@Html.Partial("_InfoMessageRender")

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-group">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ProjectID)

            <div class="form-group">
                @Html.LabelFor(model => model.UserTypeID, new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    @Html.DropDownList("UserTypeID", (SelectList)ViewBag.UserTypeID, "Select", new { @class = "form-control select-user-type" })
                    @Html.ValidationMessageFor(m => m.UserTypeID, "", new { @class = "text-danger" })
                    <div id="user-type-display-type" class="user-type-display" style="display: none;"></div>
                    <div id="user-type-display-description" class="user-type-display" style="display: none;"></div>
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.AliasCode, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AliasCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.AliasCode, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.AliasType, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AliasType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.AliasType, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.AliasDescription, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AliasDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.AliasDescription, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.MaxNTHours, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MaxNTHours, new { htmlAttributes = new { @class = "form-control" } })
                           @Html.ValidationMessageFor(m => m.MaxNTHours, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.MaxOT1Hours, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MaxOT1Hours, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.MaxOT1Hours, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.MaxOT2Hours, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MaxOT2Hours, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.MaxOT2Hours, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.MaxOT3Hours, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MaxOT3Hours, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.MaxOT3Hours, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="pull-right">
            <input type="submit" value="Save" id="submit" class="btn btn-primary" />
        </div>
        <a href="@Url.Action("Index")" class="btn btn-primary">Back</a>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $(document).ready(function() {

            function updateUserTypeInfo() {
                var val = $('.select-user-type').val();

                if (!val) {
                    $('#user-type-display-type').hide();
                    $('#user-type-display-description').hide();
                    return;
                }

                $.post('@Url.Action("GetUserType", "UserTypes")', { id: val }).done(function (data) {
                        $('#user-type-display-type').show();
                        $('#user-type-display-type').text('Type: ' + data.Type);
                        $('#user-type-display-description').show();
                        $('#user-type-display-description').text('Description: ' + data.Description);
                });
            }

            updateUserTypeInfo();
   
            $('.select-user-type').change(function() {
                updateUserTypeInfo();
            });
        });

    </script>
}