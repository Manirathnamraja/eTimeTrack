@using eTimeTrack.Helpers
@model eTimeTrack.ViewModels.ReconciliationTemplateUpdateViewModel

@{
    ViewBag.Title = "Edit Reconciliation Import Template";
    ViewBag.BannerColour = AecomColour.Blue;
}

@Html.Partial("_Banner")
@Html.Partial("_InfoMessageRender")

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-group">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ReconciliationTemplateId)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeNumberColumn, new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmployeeNumberColumn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.EmployeeNumberColumn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.WeekEndingColumn, new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.WeekEndingColumn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.WeekEndingColumn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HoursColumn, new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HoursColumn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.HoursColumn, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.DailyDates, new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="margin-top: 15px">
                    @Html.EditorFor(model => model.DailyDates)
                    @Html.ValidationMessageFor(m => m.DailyDates, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                <div class="col-md-2" style="text-align: right;">
                    <label class="control-label custom-label-with-info">
                        Identifier Column
                        <a class='tool-tip tool-tip-indent' data-toggle="tooltip" data-placement="right" title="Optional column - used to filter out rows that are not actual work hours from the import.">
                            <i class='glyphicon glyphicon-info-sign'></i>
                        </a>
                    </label>
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TypeIdentifierColumn, new { htmlAttributes = new { @class = "form-control", id = "type-identifier-column-input" } })
                    @Html.ValidationMessageFor(m => m.TypeIdentifierColumn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="identifier-text-group" style="@(string.IsNullOrWhiteSpace(Model.TypeIdentifierColumn) ? "display: none;" : null)">
                <div class="col-md-2" style="text-align: right;">
                    <label class="control-label custom-label-with-info">
                        Identifier Values
                        <a class='tool-tip tool-tip-indent' data-toggle="tooltip" data-placement="right" title="This is a semi-colon separated list of identifier values that are used to determine which rows to include. For example, a text value entered of 'Normal hours;Overtime hours' will include all rows that have either 'Normal hours' or 'Overtime hours' in the Identifier column and exclude all else from importing. Note that the values require exact matches but will not be compared in a case sensitive manner.">
                            <i class='glyphicon glyphicon-info-sign'></i>
                        </a>
                    </label>
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TypeIdentifierText, new { htmlAttributes = new { @class = "form-control required" } })
                    @Html.ValidationMessageFor(m => m.TypeIdentifierText, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="pull-right">
            <input type="submit" value="Save" id="submit" class="btn btn-primary" />
        </div>
        <a href="@Url.Action("Index")" class="btn btn-primary">Back</a>
    </div>
}

@section Scripts {
    <script>

        $(document).ready(function () {

            function showIdentifierText() {
                var identiferText = $('#identifier-text-group');
                identiferText.show();
            }

            function hideIdentifierText() {
                var identiferText = $('#identifier-text-group');
                identiferText.hide();
            }

            //$('#type-identifier-column-input').change(function () {
            $('#type-identifier-column-input').on('input', function () {

                var val = $(this).val();
                console.log('change', val);
                if (val) {
                    showIdentifierText();
                } else {
                    hideIdentifierText();
                }
            });
        });

    </script>
    }